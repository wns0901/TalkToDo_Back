version: "3.8"

services:
  app:
    image: wns0901/talktodo-server:latest
    ports:
      - "${SERVER_PORT:-8080}:8080"
    environment:
      - SPRING_DATASOURCE_URL=${SPRING_DATASOURCE_URL}
      - SPRING_DATASOURCE_USERNAME=${SPRING_DATASOURCE_USERNAME}
      - SPRING_DATASOURCE_PASSWORD=${SPRING_DATASOURCE_PASSWORD}
      - SPRING_MAIL_USERNAME=${SPRING_MAIL_USERNAME}
      - SPRING_MAIL_PASSWORD=${SPRING_MAIL_PASSWORD}
      - JWT_SECRET=${JWT_SECRET}
      - CLOUD_AWS_S3_BUCKET=${CLOUD_AWS_S3_BUCKET}
      - CLOUD_AWS_REGION_STATIC=${CLOUD_AWS_REGION_STATIC}
      - CLOUD_AWS_CREDENTIALS_ACCESS_KEY=${CLOUD_AWS_CREDENTIALS_ACCESS_KEY}
      - CLOUD_AWS_CREDENTIALS_SECRET_KEY=${CLOUD_AWS_CREDENTIALS_SECRET_KEY}
      - API_URL=${API_URL}
      - SPRING_PROFILES_ACTIVE=prod
    env_file:
      - .env
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - app-network

  db:
    image: mysql:8.0
    environment:
      MYSQL_ROOT_PASSWORD: ${SPRING_DATASOURCE_PASSWORD}
      MYSQL_DATABASE: talktodo_db
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    restart: unless-stopped
    networks:
      - app-network

  # SSL이 활성화된 경우에만 Nginx 실행
  nginx:
    image: nginx:alpine
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx-spring.conf:/etc/nginx/conf.d/default.conf
      - /etc/letsencrypt:/etc/letsencrypt:ro
    depends_on:
      - app
    restart: unless-stopped
    networks:
      - app-network
    profiles:
      - ssl # SSL 프로필이 활성화된 경우에만 실행

volumes:
  mysql_data:

networks:
  app-network:
    driver: bridge
